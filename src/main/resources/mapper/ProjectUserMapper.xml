<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="io.choerodon.iam.infra.mapper.ProjectUserMapper">
    <resultMap id="userWithRolesMap" type="io.choerodon.iam.infra.dto.UserDTO" autoMapping="true">
        <id property="id" column="id"/>
        <result property="realName" column="real_name"/>
        <result property="loginName" column="login_name"/>
        <result property="enabled" column="is_enabled"/>
        <result property="ldap" column="is_ldap"/>
        <result property="imageUrl" column="image_url"/>
        <result property="locked" column="is_locked"/>
        <result property="organizationId" column="organization_id"/>
        <result property="tenantName" column="user_org_name"/>
        <result property="organizationCode" column="user_org_code"/>
        <result property="objectVersionNumber" column="user_version_number"/>
        <collection property="roles" ofType="org.hzero.iam.domain.entity.Role"
                    autoMapping="true" notNullColumn="role_id">
            <id property="id" column="role_id"/>
            <result property="name" column="role_name"/>
            <result property="code" column="role_code"/>
            <result property="enabled" column="role_is_enabled"/>
            <result property="tenantId" column="role_org_id"/>
        </collection>
    </resultMap>

    <resultMap id="userDTO" type="io.choerodon.iam.infra.dto.UserDTO" autoMapping="true">
        <id property="id" column="id"/>
        <result property="enabled" column="is_enabled"/>
        <result property="locked" column="is_locked"/>
        <result property="ldap" column="is_ldap"/>
        <result property="admin" column="is_admin"/>
        <result property="password" column="hash_password"/>
    </resultMap>


    <select id="selectCountUsersOnProjectLevel" resultType="int">
        select count(1)
        from
        (
        select distinct iut.id
        from
        (
        select iu.*,
        case when iu.is_ldap=1 then iu.login_name else iu.email end as target_login_name
        from iam_user iu
        ) iut
        left join fd_project_user fdu on (fdu.member_id = iut.id)
        JOIN iam_role ir on ir.id=fdu.role_id
        <if test="roleName != null">
            left join iam_role ir2 on ir2.id = fdu.role_id
        </if>
        <where>
            fdu.PROJECT_ID = #{sourceId}
            <if test="roleName != null">
                and ir.name like concat(concat('%',#{roleName}),'%')
            </if>
            <if test="realName != null">
                and iut.real_name LIKE concat(concat('%',#{realName}),'%')
            </if>
            <if test="loginName != null">
                and iut.target_login_name LIKE concat(concat('%',#{loginName}),'%')
            </if>
            <if test="enabled != null">
                and iut.is_enabled = #{enabled}
            </if>
            <if test="params != null">
                and (
                iut.target_login_name like concat(concat('%',#{params}),'%') or
                iut.real_name like concat(concat('%',#{params}),'%')
                )
            </if>
        </where>
        ) t
    </select>

    <select id="selectUserWithRolesOnProjectLevel" resultMap="userWithRolesMap">
        select t2.id,t2.real_name,t2.target_login_name as login_name,t2.is_enabled,t2.is_ldap,
        t2.is_locked,t2.organization_id,t2.email,t2.language,t2.time_zone, t2.phone,t2.image_url,
        t2.object_version_number as user_version_number,
        fo.tenant_name as user_org_name,
        htc.config_value as user_org_code,
        ir2.id as role_id,ir2.code as role_code,
        ir2.name as role_name, ir2.is_enabled as role_is_enabled,ir2.h_tenant_id as role_org_id
        from
        (
        select distinct t1.*
        from
        (
        select iut.*
        from
        (
        select iu.*,
        case when iu.is_ldap=1 then iu.login_name else iu.email end as target_login_name
        from iam_user iu
        ) iut
        left join fd_project_user imr on imr.member_id = iut.id
        JOIN iam_role ir2 on ir2.id=imr.role_id
        <if test="roleName != null">
            left join iam_role ir on ir.id = imr.role_id
        </if>
        <where>
            imr.PROJECT_ID = #{sourceId}
            <if test="roleName != null">
                and ir.name like concat(concat('%',#{roleName}),'%')
            </if>
            <if test="realName != null">
                and iut.real_name LIKE concat(concat('%',#{realName}),'%')
            </if>
            <if test="loginName != null">
                and iut.target_login_name LIKE concat(concat('%',#{loginName}),'%')
            </if>
            <if test="enabled != null">
                and iut.is_enabled = #{enabled}
            </if>
            <if test="params != null">
                and (
                iut.target_login_name like concat(concat('%',#{params}),'%') or
                iut.real_name like concat(concat('%',#{params}),'%')
                )
            </if>
        </where>
        ) t1
        order by t1.is_enabled desc, t1.id desc
        <if test="start != null and size != null">
            limit #{start}, #{size}
        </if>
        ) t2
        left join fd_project_user imr2 on
        (imr2.member_id = t2.id and imr2.PROJECT_ID = #{sourceId})
        left join iam_role ir2 on ir2.id = imr2.role_id
        left join hpfm_tenant fo on (t2.organization_id = fo.tenant_id)
        left join hpfm_tenant_config htc ON fo.tenant_id = htc.tenant_id and htc.config_key = 'code'
    </select>


    <select id="listUserWithRolesOnProjectLevelByIds" resultMap="userWithRolesMap">
        select t2.id,t2.real_name,t2.target_login_name as login_name,t2.is_enabled, t2.image_url,
        t2.is_locked,t2.organization_id,t2.email,t2.language,t2.time_zone, t2.phone,
        t2.object_version_number as user_version_number,
        fo.tenant_name as user_org_name,htc.config_value as user_org_code, ir2.id as role_id,ir2.code as role_code,
        ir2.name as role_name, ir2.is_enabled as role_is_enabled,ir2.h_tenant_id as role_org_id
        from
        (
        select distinct t1.*
        from
        (
        select iut.*
        from
        (
        select iu.*,
        case when iu.is_ldap=1 then iu.login_name else iu.email end as target_login_name
        from iam_user iu
        <if test="userIds != null and userIds.size() != 0">
            WHERE iu.ID IN
            <foreach collection="userIds" open="(" close=")" separator="," item="userId">
                #{userId,jdbcType=BIGINT}
            </foreach>
        </if>
        ) iut
        left join fd_project_user imr on imr.member_id = iut.id
        JOIN iam_role ir2 on ir2.id=imr.role_id
        <where>
            imr.PROJECT_ID = #{projectId,jdbcType=BIGINT}
        </where>
        ) t1
        ) t2
        left join fd_project_user imr2 on
        (imr2.member_id = t2.id
        and imr2.PROJECT_ID = #{projectId,jdbcType=BIGINT})
        left join iam_role ir2 on ir2.id = imr2.role_id
        left join hpfm_tenant fo on (t2.organization_id = fo.tenant_id)
        left join hpfm_tenant_config htc ON fo.tenant_id = htc.tenant_id and htc.config_key = 'code'
    </select>


    <select id="listProjectUsersByProjectIdAndRoleLabel" resultType="io.choerodon.iam.infra.dto.UserDTO">
        SELECT iu.*
        FROM fd_project_user imr
        INNER JOIN iam_user iu ON iu.id = imr.member_id
        INNER JOIN iam_role ir ON imr.role_id = ir.id
        INNER JOIN iam_role_label irl ON irl.role_id = ir.id
        INNER JOIN iam_label il ON il.id = irl.label_id
        WHERE imr.PROJECT_ID = #{projectId}
        AND il.name = #{roleLabel}
    </select>

    <!--一个用户对应多个角色标签，使用GROUP BY去重-->
    <select id="listUsersByName" resultType="io.choerodon.iam.infra.dto.UserDTO">
        SELECT iu.*
        FROM fd_project_user imr
        INNER JOIN iam_user iu ON iu.id = imr.member_id
        INNER JOIN iam_role ir ON imr.role_id = ir.id
        INNER JOIN iam_role_label irl ON irl.role_id = ir.id
        INNER JOIN iam_label il ON il.id = irl.label_id
        WHERE imr.PROJECT_ID = #{projectId}
        AND (il.name = 'project.owner' OR il.name = 'project.gitlab.owner' OR il.name = 'project.gitlab.developer')
        <if test="param != null">
            AND (iu.login_name LIKE concat(concat('%', #{param}),'%') OR iu.real_name LIKE concat(concat('%',
            #{param}),'%'))
        </if>
        GROUP BY iu.id
    </select>


    <select id="listProjectOwnerById" resultType="io.choerodon.iam.infra.dto.UserDTO">
        SELECT
        iu.id,iu.email,iu.real_name,iu.phone,iu.login_name
        FROM iam_user iu
        JOIN fd_project_user imr ON iu.id =imr.member_id
        JOIN iam_role ir ON ir.id=imr.role_id
        WHERE ir.code='role/project/default/project-owner'
        AND   imr.PROJECT_ID=#{projectId}
    </select>

    <select id="listUsersByNameWithLimit" resultType="io.choerodon.iam.infra.dto.UserDTO">
        SELECT iu.*
        FROM fd_project_user imr
        INNER JOIN iam_user iu ON iu.id = imr.member_id
        WHERE imr.PROJECT_ID = #{projectId}
        <if test="param != null">
            AND (iu.login_name LIKE concat(concat('%', #{param}),'%') OR iu.real_name LIKE concat(concat('%',
            #{param}),'%'))
        </if>
        GROUP BY iu.id
        limit 20
    </select>

    <select id="listProjectRoleIds" resultType="java.lang.Long">
        SELECT fpu.ROLE_ID
        FROM fd_project_user fpu
        WHERE fpu.PROJECT_ID = #{projectId,jdbcType=BIGINT}
        AND fpu.MEMBER_ID = #{userId,jdbcType=BIGINT}
    </select>
    <select id="countProjectRoleUser" resultType="io.choerodon.iam.api.vo.agile.RoleUserCountVO">
        SELECT fpu.ROLE_ID, COUNT(*)
        FROM fd_project_user fpu
        GROUP BY fpu.ROLE_ID
    </select>


    <select id="selectUsersByOptions" resultType="io.choerodon.iam.infra.dto.UserDTO">
        SELECT iu.*
        FROM iam_user iu
        LEFT JOIN fd_project_user fpu ON fpu.MEMBER_ID = iu.id
        <where>
            fpu.PROJECT_ID = #{projectId}
            <if test="userId != null">
                AND iu.id = #{userId}
            </if>
            <if test="email != null">
                AND iu.email LIKE concat(concat('%',#{email}),'%')
            </if>
            <if test="param != null">
                AND (
                iam_user.login_name LIKE concat(concat('%',#{param}),'%') OR
                iam_user.real_name LIKE concat(concat('%',#{param}),'%')
                )
            </if>

        </where>

    </select>
    <select id="listProjectUsersByRoleIdAndOptions" resultType="io.choerodon.iam.infra.dto.UserDTO">

    </select>

    <select id="selectAgileUsersByProjectId" resultMap="userDTO">
        select iu1.*
        from iam_user iu1
        join (
        select iu.id
        from iam_user iu
        where iu.id in (
        select distinct member_id
        from fd_project_user
        where PROJECT_ID = #{projectId}
        )
        <if test="userIds != null and userIds.size > 0">
            or iu.id in
            <foreach item="id" index="index" collection="userIds"
                     open="(" separator="," close=")">
                #{id}
            </foreach>
        </if>
        ) t on iu1.id = t.id
        where 1=1
        <if test="param != null">
            AND (
            iu1.login_name LIKE concat(concat('%',#{param}),'%') OR
            iu1.real_name LIKE concat(concat('%',#{param}),'%')
            )
        </if>
    </select>
</mapper>
