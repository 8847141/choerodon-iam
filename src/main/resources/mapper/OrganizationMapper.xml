<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="io.choerodon.base.infra.mapper.OrganizationMapper">
    <resultMap id="organizationWithProjects" type="io.choerodon.base.infra.dto.OrganizationDTO" autoMapping="true">
        <id column="id" property="id"/>
        <result column="code" property="code" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="is_enabled" property="enabled" jdbcType="BOOLEAN"/>
        <collection property="projects" ofType="io.choerodon.base.infra.dto.ProjectDTO" autoMapping="true">
            <id column="project_id" property="id"/>
            <result column="project_name" property="name" jdbcType="VARCHAR"/>
            <result column="project_code" property="code" jdbcType="VARCHAR"/>
            <result column="organization_id" property="organizationId" jdbcType="DECIMAL"/>
            <result column="project_is_enabled" property="enabled" jdbcType="BOOLEAN"/>
        </collection>
    </resultMap>

    <resultMap id="OrganizationDTO" type="io.choerodon.base.infra.dto.OrganizationDTO" autoMapping="true">
        <id column="id" property="id"/>
        <result column="is_enabled" property="enabled" jdbcType="BOOLEAN"/>
    </resultMap>

    <resultMap id="OrganizationWithRoleDTO" type="io.choerodon.base.infra.dto.OrganizationDTO" autoMapping="true">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="code" column="code"/>
        <result property="enabled" column="is_enabled"/>
        <collection property="roles" ofType="io.choerodon.base.infra.dto.RoleDTO" autoMapping="true">
            <id property="id" column="role_id"/>
            <result property="name" column="role_name"/>
            <result property="code" column="role_code"/>
            <result property="enabled" column="role_is_enabled"/>
        </collection>
    </resultMap>

    <select id="fulltextSearch"   resultMap="OrganizationDTO">
        SELECT
        org.*,iu.login_name as owner_login_name,iu.real_name as owner_real_name,
        CASE
        WHEN
        t.project_count IS NULL
        THEN 0
        ELSE t.project_count
        END
        AS projectCount,
        CASE
        WHEN f.user_count IS NULL
        THEN 0
        ELSE f.user_count
        END
        AS userCount
        FROM fd_organization org
        LEFT JOIN
        (
        SELECT
        p.organization_id AS org_id,
        COUNT(p.id) AS project_count
        FROM fd_organization o
        JOIN fd_project p
        ON o.id = p.organization_id
        GROUP BY p.organization_id
        ) t ON org.id = t.org_id
        LEFT JOIN(
        SELECT
        imr.source_id AS source_id,
        COUNT(imr.member_id) AS user_count
        FROM iam_member_role imr
        WHERE imr.SOURCE_TYPE='organization'
        GROUP BY imr.source_id
        ) f ON org.id= f.source_id
        left join iam_user iu on org.user_id = iu.id
        <where>
            <if test="name != null">
                AND org.name LIKE concat(concat('%',#{name}),'%')
            </if>
            <if test="code != null">
                AND org.code LIKE concat(concat('%',#{code}),'%')
            </if>
            <if test="ownerRealName != null">
                AND iu.real_name LIKE concat(concat('%',#{ownerRealName}),'%')
            </if>
            <if test="enabled != null">
                AND org.is_enabled = #{enabled}
            </if>
            <if test="params != null">
                AND (
                org.name LIKE concat(concat('%', #{params}), '%') OR
                org.code LIKE concat(concat('%', #{params}), '%')
                )
            </if>

        </where>



    </select>

    <select id="selectFromMemberRoleByMemberId" resultMap="OrganizationDTO">
        select distinct fo.*
        from fd_organization fo
        inner join iam_member_role imr on (fo.id = imr.source_id and imr.source_type = 'organization')
        inner join iam_role ir on (ir.id = imr.role_id and ir.is_enabled = 1)
        <where>
            imr.member_id = #{memberId} and imr.member_type='user' and ir.code != 'role/organization/default/organization-member'
            <if test="!includedDisabled">
                AND fo.is_enabled = 1
            </if>
        </where>
    </select>

    <select id="selectOrgByUserAndPros" resultMap="OrganizationDTO">
        SELECT DISTINCT fd_organization.*
        FROM fd_organization
        WHERE id
        IN
        (
        SELECT DISTINCT fp.organization_id
        FROM fd_project fp
        INNER JOIN iam_member_role imr
        ON imr.source_id=fp.id
        INNER JOIN iam_role
        ON iam_role.is_enabled = 1 and iam_role.id = imr.role_id
        AND imr.source_type='project'
        WHERE imr.member_id=#{memberId}
        )
        <if test="!includedDisabled">
            AND fd_organization.is_enabled = 1
        </if>
    </select>

    <!-- 根据databaseId找指定的sql，既不是mysql也不是oracle走这条sql，默认是使用mysql的sql -->
    <select id="selectOrganizationsWithRoles" resultMap="OrganizationWithRoleDTO">
        SELECT
        o.id,
        o.name,
        o.code,
        o.is_enabled,
        ir.id AS role_id,
        ir.name AS role_name,
        ir.code AS role_code,
        ir.is_enabled AS role_is_enabled
        FROM fd_organization o
        INNER JOIN
        (
        SELECT DISTINCT source_id FROM iam_member_role
        WHERE member_id = #{id}
        AND member_type = 'user'
        AND source_type = 'organization'
        ORDER BY source_id ASC
        LIMIT #{start}, #{size}
        ) t
        ON o.id = t.source_id
        INNER JOIN iam_member_role imr ON imr.source_id = o.id
        LEFT JOIN iam_role ir ON imr.role_id = ir.id
        WHERE imr.source_type = 'organization'
        AND imr.member_type = 'user'
        AND imr.member_id = #{id}
        <if test="params != null">
            AND (
            o.name LIKE concat(concat('%', #{params}), '%') OR
            o.code LIKE concat(concat('%', #{params}), '%')
            )
        </if>
    </select>

    <select id="selectOrganizationsWithRoles" databaseId="mysql" resultMap="OrganizationWithRoleDTO">
        SELECT
        o.id,
        o.name,
        o.code,
        o.is_enabled,
        ir.id AS role_id,
        ir.name AS role_name,
        ir.code AS role_code,
        ir.is_enabled AS role_is_enabled
        FROM fd_organization o
        INNER JOIN
        (
        SELECT DISTINCT source_id FROM iam_member_role
        WHERE member_id = #{id}
        AND member_type = 'user'
        AND source_type = 'organization'
        ORDER BY source_id ASC
        LIMIT #{start}, #{size}
        ) t
        ON o.id = t.source_id
        INNER JOIN iam_member_role imr ON imr.source_id = o.id
        LEFT JOIN iam_role ir ON imr.role_id = ir.id
        WHERE imr.source_type = 'organization'
        AND imr.member_type = 'user'
        AND imr.member_id = #{id}
        <if test="params != null">
            AND (
            o.name LIKE concat(concat('%', #{params}), '%') OR
            o.code LIKE concat(concat('%', #{params}), '%')
            )
        </if>
    </select>

    <select id="selectOrganizationsWithRoles" databaseId="oracle" resultMap="OrganizationWithRoleDTO">
        SELECT
        o.id,
        o.name,
        o.code,
        o.is_enabled,
        ir.id AS role_id,
        ir.name AS role_name,
        ir.code AS role_code,
        ir.is_enabled AS role_is_enabled
        FROM fd_organization o
        INNER JOIN
        (
        <![CDATA[
            SELECT *
            FROM
            (
                SELECT TMP_PAGE.*, ROWNUM ROW_ID
                FROM
                (
                    SELECT DISTINCT source_id
                    FROM iam_member_role
                    WHERE member_id = #{id}
                    AND member_type = 'user'
                    AND source_type = 'organization'
                    ORDER BY source_id ASC
                ) TMP_PAGE
                WHERE ROWNUM <= ((#{start} + 1) * #{size})
            )
            WHERE ROW_ID > (#{start} * #{size})
        ]]>
        ) t
        ON o.id = t.source_id
        INNER JOIN iam_member_role imr ON imr.source_id = o.id
        LEFT JOIN iam_role ir ON imr.role_id = ir.id
        WHERE imr.source_type = 'organization'
        AND imr.member_type = 'user'
        AND imr.member_id = #{id}
        <if test="params != null">
            AND (
            o.name LIKE concat(concat('%', #{params}), '%') OR
            o.code LIKE concat(concat('%', #{params}), '%')
            )
        </if>
    </select>

    <select id="organizationEnabled" resultType="java.lang.Boolean">
        SELECT is_enabled FROM fd_organization WHERE id = #{sourceId}
    </select>

    <select id="selectByIds" resultMap="OrganizationDTO">
        select * from fd_organization
        where id in
        <foreach item="id" index="index" collection="ids"
                 open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <select id="listMemberIds" resultType="java.lang.Long">
        SELECT DISTINCT member_id
        FROM iam_member_role
        WHERE source_id = #{orgId}
        AND source_type = #{orgName}
    </select>

    <select id="selectAllOrgIdAndName" resultType="io.choerodon.base.api.dto.OrganizationSimplifyDTO">
        SELECT
            ID,
            NAME
        FROM
            fd_organization
    </select>


    <select id="selectSpecified" resultType="io.choerodon.base.api.dto.OrgSharesDTO">
        SELECT
        fo.id,
        fo. NAME,
        fo. CODE,
        fo.is_enabled AS enabled,
        fo.category AS categoryCode,
        foc. NAME AS categoryName
        FROM
        fd_organization fo
        LEFT JOIN fd_organization_category foc ON fo.category = foc. CODE
        WHERE
        1 = 1
        <if test="name != null">
            AND fo.name LIKE concat(concat('%', #{name}), '%')
        </if>
        <if test="code != null">
            AND fo.code LIKE concat(concat('%', #{code}), '%')
        </if>
        <if test="enabled != null">
            AND fo.is_enabled = #{enabled}
        </if>
        <if test="params != null">
            AND (
            fo.name LIKE concat(concat('%', #{params}), '%') OR
            fo.code LIKE concat(concat('%', #{params}), '%')
            )
        </if>
        AND fo.id IN
        <foreach item="item" index="index" collection="orgIds" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="selectOwnOrgByUserId" resultMap="OrganizationDTO">
        SELECT fo.*
        FROM fd_organization fo
        left join iam_user iu on fo.id = iu.organization_id
        where iu.id = #{userId}
    </select>

</mapper>
