<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="io.choerodon.iam.infra.mapper.OrganizationMapper">
    <resultMap id="organizationWithProjects" type="io.choerodon.iam.infra.dto.OrganizationDTO" autoMapping="true">
        <id column="id" property="id"/>
        <result column="code" property="code" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="is_enabled" property="enabled" jdbcType="BOOLEAN"/>
        <collection property="projects" ofType="io.choerodon.iam.infra.dto.ProjectDTO" autoMapping="true">
            <id column="project_id" property="id"/>
            <result column="project_name" property="name" jdbcType="VARCHAR"/>
            <result column="project_code" property="code" jdbcType="VARCHAR"/>
            <result column="organization_id" property="organizationId" jdbcType="DECIMAL"/>
            <result column="project_is_enabled" property="enabled" jdbcType="BOOLEAN"/>
        </collection>
    </resultMap>

    <resultMap id="OrganizationDTO" type="io.choerodon.iam.infra.dto.OrganizationDTO" autoMapping="true">
        <id column="tenant_id" property="id"/>
        <result column="enabled_flag" property="enabled" jdbcType="BOOLEAN"/>
    </resultMap>

    <resultMap id="OrganizationWithRoleDTO" type="io.choerodon.iam.infra.dto.OrganizationDTO" autoMapping="true">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="code" column="code"/>
        <result property="enabled" column="is_enabled"/>
        <collection property="roles" ofType="org.hzero.iam.domain.entity.Role" autoMapping="true">
            <id property="id" column="role_id"/>
            <result property="name" column="role_name"/>
            <result property="code" column="role_code"/>
            <result property="enabled" column="role_is_enabled"/>
        </collection>
    </resultMap>

    <select id="fulltextSearch" resultMap="OrganizationDTO">
        SELECT
        org.*,iu.login_name as owner_login_name,iu.real_name as owner_real_name,
        CASE
        WHEN
        t.project_count IS NULL
        THEN 0
        ELSE t.project_count
        END
        AS project_count
        FROM hpfm_tenant org
        LEFT JOIN hpfm_tenant_config htc ON htc.tenant_id = org.tenant_id AND htc.config_key = 'userId'
        LEFT JOIN
        (
        SELECT
        p.organization_id AS org_id,
        COUNT(p.id) AS project_count
        FROM hpfm_tenant o
        JOIN fd_project p ON o.tenant_id = p.organization_id
        GROUP BY p.organization_id
        ) t ON org.tenant_id = t.org_id
        left join iam_user iu on htc.config_value = iu.id
        <where>
            <if test="name != null">
                AND org.tenant_name LIKE concat(concat('%',#{name}),'%')
            </if>
            <if test="code != null">
                AND org.tenant_num LIKE concat(concat('%',#{code}),'%')
            </if>
            <if test="ownerRealName != null">
                AND iu.real_name LIKE concat(concat('%',#{ownerRealName}),'%')
            </if>
            <if test="enabled != null">
                AND org.enabled_flag = #{enabled}
            </if>
            <if test="params != null">
                AND (
                org.tenant_name LIKE concat(concat('%', #{params}), '%') OR
                org.tenant_num LIKE concat(concat('%', #{params}), '%')
                )
            </if>
        </where>
        order by org.tenant_id desc
    </select>

    <select id="selectFromMemberRoleByMemberId" resultType="org.hzero.iam.domain.entity.Tenant">
        select distinct fo.tenant_id, fo.tenant_name, fo.tenant_num
        from hpfm_tenant fo
        inner join iam_member_role imr on (fo.tenant_id = imr.source_id and imr.source_type = 'organization')
        inner join iam_role ir on (ir.id = imr.role_id and ir.is_enabled = 1)
        <where>
            imr.member_id = #{memberId} and imr.member_type='user' and ir.code != 'role/organization/default/organization-member'
            <if test="!includedDisabled">
                AND fo.enabled_flag = 1
            </if>
        </where>
    </select>

    <select id="organizationEnabled" resultType="java.lang.Boolean">
        SELECT enabled_flag FROM hpfm_tenant WHERE hpfm_tenant.tenant_id = #{sourceId}
    </select>

    <select id="selectByOrgIds" resultMap="OrganizationDTO">
        select * from hpfm_tenant ht
        where ht.tenant_id in
        <foreach item="id" index="index" collection="ids"
                 open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <select id="selectAllOrgIdAndName" resultType="io.choerodon.iam.infra.dto.OrganizationSimplifyDTO">
        SELECT ht.tenant_id AS id, ht.tenant_name AS `name`
        FROM
          hpfm_tenant ht
</select>

    <select id="selectSpecified" resultType="io.choerodon.iam.infra.dto.OrgSharesDTO">
        SELECT
        fo.tenant_id AS id,
        fo.tenant_name AS `name`,
        fo.tenant_num AS `code`,
        fo.enabled_flag AS enabled
        FROM
        hpfm_tenant fo
        WHERE
        1 = 1
        <if test="name != null">
            AND fo.tenant_name LIKE concat(concat('%', #{name}), '%')
        </if>
        <if test="code != null">
            AND fo.tenant_num LIKE concat(concat('%', #{code}), '%')
        </if>
        <if test="enabled != null">
            AND fo.enabled_flag = #{enabled}
        </if>
        <if test="params != null">
            AND (
            fo.tenant_name LIKE concat(concat('%', #{params}), '%') OR
            fo.tenant_num LIKE concat(concat('%', #{params}), '%')
            )
        </if>
        AND fo.tenant_id IN
        <foreach item="item" index="index" collection="orgIds" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="selectOwnOrgByUserId" resultMap="OrganizationDTO">
        SELECT fo.*
        FROM hpfm_tenant fo
        left join iam_user iu on fo.tenant_id = iu.organization_id
        where iu.id = #{userId}
    </select>

    <select id="projectOverview" resultType="io.choerodon.iam.api.vo.ProjectOverViewVO">
        SELECT
        SUM(CASE WHEN fp.is_enabled=1 THEN 1 ELSE 0 END) AS enableSum,
        SUM(CASE WHEN fp.is_enabled=0 THEN 1 ELSE  0 END) AS stopSum
        FROM
        fd_project  fp
        WHERE fp.organization_id=#{organizationId}
    </select>
</mapper>
