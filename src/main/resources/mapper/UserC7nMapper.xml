<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="io.choerodon.iam.infra.mapper.UserC7nMapper">
    <resultMap id="userDTO" type="org.hzero.iam.domain.entity.User" autoMapping="true">
        <id property="id" column="id"/>
        <result property="enabled" column="is_enabled"/>
        <result property="locked" column="is_locked"/>
        <result property="ldap" column="is_ldap"/>
        <result property="admin" column="is_admin"/>
        <result property="password" column="hash_password"/>
    </resultMap>

    <resultMap id="projectUserWithRolesMap" type="org.hzero.iam.domain.entity.User">
        <id property="id" column="id"/>
        <result property="realName" column="real_name"/>
        <result property="loginName" column="login_name"/>
        <result property="enabled" column="is_enabled"/>
        <result property="locked" column="is_locked"/>
        <result property="email" column="email"/>
        <result property="ldap" column="is_ldap"/>
        <result property="creationDate" column="creation_date"/>
        <collection property="roles" ofType="org.hzero.iam.domain.entity.Role"
                    autoMapping="true" notNullColumn="role_id">
            <id property="id" column="role_id"/>
            <result property="name" column="role_name"/>
            <result property="code" column="role_code"/>
        </collection>
    </resultMap>

    <resultMap id="userWithRolesMap" type="io.choerodon.iam.infra.dto.UserDTO" autoMapping="true">
        <id property="id" column="id"/>
        <result property="realName" column="real_name"/>
        <result property="loginName" column="login_name"/>
        <result property="enabled" column="is_enabled"/>
        <result property="ldap" column="is_ldap"/>
        <result property="imageUrl" column="image_url"/>
        <result property="locked" column="is_locked"/>
        <result property="organizationId" column="organization_id"/>
        <result property="tenantName" column="user_org_name"/>
        <result property="organizationCode" column="user_org_code"/>
        <result property="objectVersionNumber" column="user_version_number"/>
        <collection property="roles" ofType="org.hzero.iam.domain.entity.Role"
                    autoMapping="true" notNullColumn="role_id">
            <id property="id" column="role_id"/>
            <result property="name" column="role_name"/>
            <result property="code" column="role_code"/>
            <result property="enabled" column="role_is_enabled"/>
            <result property="tenantId" column="role_org_id"/>
        </collection>
    </resultMap>

    <resultMap id="RoleMap" type="io.choerodon.iam.infra.dto.RoleDTO">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="code" property="code"/>
        <result column="h_parent_role_id" property="parentRoleId"/>
        <result column="h_inherit_role_id" property="inheritRoleId"/>
        <collection property="labels" ofType="org.hzero.iam.domain.entity.Label">
            <id column="name" property="name" />
            <result column="type" property="type" />
            <result column="FD_LEVEL" property="createFlag" />
            <result column="h_inherit_flag" property="fdLevel" />
        </collection>
    </resultMap>

    <select id="listUsersByIds" resultMap="userDTO">
        SELECT * FROM iam_user
        WHERE id IN
        <foreach item="id" index="index" collection="ids"
                 open="(" separator="," close=")">
            #{id}
        </foreach>
        <if test="onlyEnabled == true">
            AND is_enabled = 1
        </if>
    </select>


    <select id="listUsersByEmails" resultMap="userDTO">
        SELECT * FROM iam_user
        WHERE email IN
        <foreach item="email" index="index" collection="emails"
                 open="(" separator="," close=")">
            #{email}
        </foreach>
        AND is_enabled = 1
    </select>

    <select id="listUsersByLoginNames" resultMap="userDTO">
        SELECT * FROM iam_user
        WHERE login_name IN
        <foreach item="loginName" index="index" collection="loginNames"
                 open="(" separator="," close=")">
            #{loginName}
        </foreach>
        <if test="onlyEnabled == true">
            AND is_enabled = 1
        </if>
    </select>

    <select id="newUsersByDate" resultType="java.lang.Integer">
        SELECT
            COUNT(*)
        FROM
            iam_user
        WHERE
            creation_date BETWEEN #{begin}
            AND #{end}
    </select>

    <select id="countPreviousNumberByOrgIdAndDate" resultType="java.lang.Long">
        select count(1)
        from iam_user iu
        where iu.is_enabled = true
        <if test="organizationId">
            AND iu.organization_id = #{organizationId}
        </if>
        <if test="startTime">
            AND iu.creation_date <![CDATA[<]]> CONCAT('','${startTime}',' 00:00:00')
        </if>
    </select>

    <select id="selectByOrgIdAndDate" resultType="org.hzero.iam.domain.entity.User">
        select *
        from iam_user iu
        where iu.is_enabled = true
        <if test="organizationId">
            AND iu.organization_id = #{organizationId}
        </if>
        <if test="startTime">
            AND iu.creation_date >= CONCAT('','${startTime}',' 00:00:00')
        </if>
        <if test="endTime">
            AND iu.creation_date <![CDATA[<=]]> CONCAT('','${endTime}',' 23:59:59')
        </if>
    </select>


    <select id="selectUsersByLevelAndOptions" resultMap="userDTO">
        SELECT iam_user.*
        FROM iam_user
        JOIN
        (
        SELECT
        DISTINCT member_id
        FROM
        iam_member_role
        WHERE
        source_id = #{sourceId}
        AND source_type = #{sourceType}
        AND member_type = 'user'
        ) t
        ON iam_user.id = t.member_id
        WHERE 1=1
        <if test="userId != null">
            AND iam_user.id = #{userId}
        </if>
        <if test="email != null">
            AND iam_user.email LIKE concat(concat('%',#{email}),'%')
        </if>
        <if test="param != null">
            AND (
            iam_user.login_name LIKE concat(concat('%',#{param}),'%') OR
            iam_user.real_name LIKE concat(concat('%',#{param}),'%')
            )
        </if>
    </select>

    <select id="selectAdminUserPage" resultMap="userDTO">
        select iut.id,iut.target_login_name as login_name,iut.real_name,
        iut.is_enabled,iut.is_locked,iut.is_ldap,iut.is_admin,iut.object_version_number
        from
        (
        select iu.*,
        case when iu.is_ldap=1 then iu.login_name else iu.email end as target_login_name
        from iam_user iu
        ) iut
        where iut.id IN (
        SELECT
        imr.member_id
        FROM
        iam_member_role imr
        INNER JOIN iam_role ir ON (
        ir.`code` = 'role/site/default/administrator'
        OR ir. CODE = 'role/organization/default/administrator'
        )
        AND imr.role_id = ir.id
        WHERE
        imr.member_type = 'user'
        GROUP BY
        imr.member_id
        HAVING
        COUNT(imr.role_id) = 2
        )
        <if test="loginName!= null">
            AND iut.target_login_name LIKE concat(concat('%', #{loginName}), '%')
        </if>
        <if test="realName != null">
            AND iut.real_name LIKE concat(concat('%', #{realName}), '%')
        </if>
        <if test="params != null">
            AND (
            iut.target_login_name LIKE concat(concat('%',#{params}),'%') OR
            iut.real_name LIKE concat(concat('%',#{params}),'%')
            )
        </if>
        <if test="userId != null">
            AND iut.id =#{userId}
        </if>
        order by iut.id desc
    </select>

    <select id="selectUserByRoleCode" resultType="java.lang.Long">
        SELECT
            imr.member_id
        FROM
            iam_member_role imr
            INNER JOIN iam_role ir ON ir.`code` = #{roleCode}
            AND imr.role_id = ir.id
        WHERE
            imr.member_type = 'user'

    </select>


    <select id="selectCountUsersOnSiteLevel" resultType="int">
        select count(1)
        from
        (
        select distinct iut.id
        from
        (
        select iu.*,
        case when iu.is_ldap=1 then iu.login_name else iu.email end as target_login_name
        from iam_user iu
        ) iut
        <if test="orgName != null">
            left join hpfm_tenant fo on fo.id = iut.organization_id
        </if>
        <if test="roleName != null">
            left join iam_member_role imr on (imr.member_id = iut.id and imr.member_type = 'user')
            left join iam_role ir on ir.id = imr.role_id
        </if>
        <where>
            <if test="orgName != null">
                and fo.name like concat(concat('%',#{orgName}),'%')
            </if>
            <if test="roleName != null">
                and imr.source_id = #{sourceId}
                and imr.source_type = #{sourceType}
                and ir.name like concat(concat('%',#{roleName}),'%')
            </if>
            <if test="realName != null">
                and iut.real_name like concat(concat('%',#{realName}),'%')
            </if>
            <if test="loginName != null">
                and iut.target_login_name like concat(concat('%',#{loginName}),'%')
            </if>
            <if test="enabled != null">
                and iut.is_enabled = #{enabled}
            </if>
            <if test="locked != null">
                and iut.is_locked = #{locked}
            </if>
            <if test="params != null">
                and (
                iut.target_login_name like concat(concat('%',#{params}),'%') or
                iut.real_name like concat(concat('%',#{params}),'%')
                )
            </if>
        </where>
        ) t
    </select>

    <select id="selectUserWithRolesOnSiteLevel" resultMap="userWithRolesMap">
        select t2.is_ldap,t2.id,t2.real_name,t2.target_login_name as login_name,t2.is_enabled,
        t2.is_locked,t2.organization_id,t2.email,t2.language,t2.time_zone, t2.phone,
        t2.object_version_number as user_version_number,
        fo2.name as user_org_name,fo2.code as user_org_code, ir2.id as role_id,ir2.code as role_code,
        ir2.name as role_name, ir2.is_enabled as role_is_enabled,ir2.organization_id as role_org_id
        from
        (
        select distinct t1.*
        from
        (
        select iut.*
        from
        (
        select iu.*,
        case when iu.is_ldap=1 then iu.login_name else iu.email end as target_login_name
        from iam_user iu
        ) iut
        <if test="orgName != null">
            left join hpfm_tenant fo on fo.id = iut.organization_id
        </if>
        <if test="roleName != null">
            left join iam_member_role imr on (imr.member_id = iut.id and imr.member_type = 'user')
            left join iam_role ir on ir.id = imr.role_id
        </if>
        <where>
            <if test="orgName != null">
                and fo.name like concat(concat('%',#{orgName}),'%')
            </if>
            <if test="roleName != null">
                and imr.source_id = #{sourceId}
                and imr.source_type = #{sourceType}
                and ir.name like concat(concat('%',#{roleName}),'%')
            </if>
            <if test="realName != null">
                and iut.real_name LIKE concat(concat('%',#{realName}),'%')
            </if>
            <if test="loginName != null">
                and iut.target_login_name LIKE concat(concat('%',#{loginName}),'%')
            </if>
            <if test="enabled != null">
                and iut.is_enabled = #{enabled}
            </if>
            <if test="locked != null">
                and iut.is_locked = #{locked}
            </if>
            <if test="params != null">
                and (
                iut.target_login_name like concat(concat('%',#{params}),'%') or
                iut.real_name like concat(concat('%',#{params}),'%')
                )
            </if>
        </where>
        ) t1
        order by t1.is_enabled desc, t1.id desc
        <if test="start != null and size != null">
            limit #{start}, #{size}
        </if>
        ) t2
        left join iam_member_role imr2 on
        (imr2.member_id = t2.id and imr2.member_type = 'user' and imr2.source_id = #{sourceId} and imr2.source_type =
        #{sourceType})
        left join iam_role ir2 on ir2.id = imr2.role_id
        left join hpfm_tenant fo2 on (t2.organization_id = fo2.id)
    </select>


    <select id="selectRolesByUidAndProjectId" resultMap="RoleMap">
        SELECT
            ir.*,
            il.name,
            il.type,
            il.FD_LEVEL
        FROM
            fd_project_user fpu
            INNER JOIN
            iam_role ir ON fpu.role_id = ir.id
            left JOIN iam_role_label on irl.role_id=ir.id
            Left JOIN iam_label il on il.id=irl.lable_id
        WHERE
            fpu.member_id = #{id}
            AND
            fpu.project_id = #{projectId}
    </select>
</mapper>
